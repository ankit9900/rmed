#!/usr/bin/env bash

GIT=$(type -p git) || { echo >&2 "git not installed. Exiting..."; exit 1; }
DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Need a temp location to store diffs
if [ -z $TMPDIR ]; then
    TMPDIR="/tmp" 
fi

export MYVIM=$(type -p vim) || { echo >&2 "vim not installed."; }
ROOTDIR=$TMPDIR
LAUNCHBROWSER=1
NODATE=0
usage () {
    echo "usage: rmed [--diff-directory /path/to/some/folder] [--no-launch-broswer] [--rmed-help] <regular git diff parameters>"
    echo ""
    echo "       rmed is a simple wrapper around git diff. Invoke rmed with the same parameters that you would invoke git diff."
    echo ""
    echo "       --diff-directory    :    By default, rmed stores diffs in a temp location. This setting will override that."
    echo "       --no-launch-broswer :    By default, rmed will try to launch a browser with your diffs. This argument reverses "
    echo "                                that behavior."
    echo "       --no-date           :    Don't add the current date in the diff path."
    echo "       --http-base-url     :    If your --diff-directory is web accessible, rmed can display the full path to the diffs"
    echo "                                when the base http url is specified."
    echo "       --help              :    Display this help text."
    echo ""
    echo "More info here: https://github.com/roubles/rmed"
          
}
setArgs () {
  var=0
  while [ "$1" != "" ]; do
    case $1 in
      "--diff-directory")
                          unset parms[$var]
                          var=$((var+1))
                          shift
                          ROOTDIR=`cd "$1"; pwd`
                          unset parms[$var]
                          ;;
      "--vim")
                          unset parms[$var]
                          var=$((var+1))
                          shift
                          export MYVIM="$1"
                          unset parms[$var]
                          ;;
      "--http-base-url")
                          unset parms[$var]
                          var=$((var+1))
                          shift
                          export HTTPBASEURL="$1"
                          unset parms[$var]
                          ;;
      "--no-launch-browser")
                          LAUNCHBROWSER=0
                          unset parms[$var]
                          ;;
      "--no-date")
                          NODATE=1
                          unset parms[$var]
                          ;;
      "-h"|"--help")
                          usage
                          exit 0
                          ;;
    esac
    var=$((var+1))
    shift
  done
}

parms=( "$@" )
setArgs "$@"

# First test if we are in a git repo
ROOT=$($GIT rev-parse --show-toplevel 2>/dev/null)
if [ $? -eq 0 ]; then
    REPONAME=$(basename $ROOT)
else
    echo "Not a git repo. Exiting."
    exit 1
fi
echo "Diffing local repo [$REPONAME]"

if [ -z $MYVIM ]; then
    echo "Did not find vim. Exiting..."
    exit 4
else
    echo "Using vim from: $MYVIM"
fi

if [ $NODATE -eq 1 ]; then
    DIFFDIR="rmed/$USER/$REPONAME/diffs"
else
    DIFFDIR="rmed/$USER/$REPONAME/$DATE/diffs"
fi
export RMED_DIFF_ROOT=$ROOTDIR/$DIFFDIR

mkdir -p $RMED_DIFF_ROOT
echo "Will Store diffs in $RMED_DIFF_ROOT"
echo "Diff command will be: $GIT diff "${parms[@]}""

# First generate text diffs. These are useful for patching later.
$GIT diff "${parms[@]}" > $RMED_DIFF_ROOT/diffs.txt

# Now generate side by side diffs
INDEX_HTML=$RMED_DIFF_ROOT/index.html

#Locate rmed-vimdiff
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
if [ -f "$DIR/rmed-vimdiff" ]; then
    RMEDVIMDIFF="$DIR/rmed-vimdiff"
else
    RMEDVIMDIFF=$(type -p rmed-vimdiff) || { echo >&2 "rmed-vimdiff not installed. Exiting..."; exit 1; }
fi
echo "Using rmed-vimdiff from: $RMEDVIMDIFF"

echo "<html>" >> $INDEX_HTML
echo "<style>" >> $INDEX_HTML
echo "table.fixed {table-layout:fixed; width:100%;}" >> $INDEX_HTML
echo "table.fixed td {overflow:hidden;}" >> $INDEX_HTML
echo "table.fixed td:nth-of-type(1) {width:100px;}" >> $INDEX_HTML
echo "table.fixed td:nth-of-type(2) {width:99%;}" >> $INDEX_HTML
echo "table.fixed td:nth-of-type(3) {width:100px;}" >> $INDEX_HTML
echo "tr.deleted td { background-color: #FFDDDD; word-wrap: break-word; }" >> $INDEX_HTML
echo "tr.added td { background-color: #DDFFDD; word-wrap: break-word; }" >> $INDEX_HTML
echo "tr.modified td { background-color: #DDDDFF; word-wrap: break-word; }" >> $INDEX_HTML
echo "p { font-family: "Lucida Console", Monaco, monospace; }" >> $INDEX_HTML
echo "tr { font-family: "Lucida Console", Monaco, monospace; }" >> $INDEX_HTML
echo "footer { font-family: "Lucida Console", Monaco, monospace; font-size: 80%; position:fixed; bottom:0; left:5;}" >> $INDEX_HTML
echo "</style>" >> $INDEX_HTML
echo "<p>>$ git diff ${parms[@]}</p>" >> $INDEX_HTML
echo "<br>" >> $INDEX_HTML
echo "<br>" >> $INDEX_HTML
echo "<table class=\"fixed\">" >> $INDEX_HTML
echo "<tr>" >> $INDEX_HTML
echo "<td><b>Diffs</b></td>" >> $INDEX_HTML
echo "<td><b>Filename</b></td>" >> $INDEX_HTML
echo "<td><b>State<b></td>" >> $INDEX_HTML
echo "</tr>" >> $INDEX_HTML
export GIT_EXTERNAL_DIFF=$RMEDVIMDIFF
$GIT --no-pager diff "${parms[@]}"
echo "</table>" >> $INDEX_HTML
echo "<br>" >> $INDEX_HTML
echo "<br>" >> $INDEX_HTML
echo "<br>" >> $INDEX_HTML
echo "<p>[<a href="$RMED_DIFF_ROOT/diffs.txt">txt</a>] Full diffs</p>" >> $INDEX_HTML
echo "<footer> <p>Generated by <a href="https://github.com/roubles/rmed">rmed</a> at $DATE</p> </footer>" >> $INDEX_HTML 
echo "</html>" >> $INDEX_HTML
echo "Diffs are here $INDEX_HTML"

if [[ "$HTTPBASEURL" != "" ]]; then
    echo "Diffs are web accessible here: $HTTPBASEURL/$ROOTDIR/index.html"
fi

function launch_mac_browser() {
    if which open > /dev/null 2>&1
    then
        open $INDEX_HTML
    else
        echo "Could not find mac broswer."
    fi
}

function launch_linux_broswer() {
    if which xdg-open > /dev/null 2>&1
    then
        xdg-open $INDEX_HTML&
    elif which gnome-open > /dev/null 2>&1
    then
        gnome-open $INDEX_HTML&
    else
        echo "Could not find linux broswer."
    fi
}

if [ $LAUNCHBROWSER -eq 1 ]; then
    if [ "$(uname)" == "Darwin" ]; then
        # Do something under Mac OS X platform        
        echo "Launching browser on Mac OS X"
        launch_mac_browser $INDEX_HTML
    elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
        # Do something under GNU/Linux platform
        echo "Launching browser on GNU/LINUX"
        launch_linux_broswer $INDEX_HTML
    else
        # Do something under Windows NT platform
        echo "Unsupported OS."
        exit 128
    fi
fi
